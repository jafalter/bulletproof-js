const EC = require('elliptic').ec;

const ec = new EC('secp256k1');

/**
 * Secp256k1 public parameters
 * p is the prime of the group
 * n is the group order
 * @type {{p: bigint, n: bigint}}
 */
module.exports.secp256k1 = {
    p : 115792089237316195423570985008687907853269984665640564039457584007908834671663n,
    n : 115792089237316195423570985008687907852837564279074904382605163141518161494337n,
};

/**
 * NUMS generators
 *
 * H was generated by sha256 hashing G and coercing a y point
 * B was generated by sha256 hashing H and coercing a y point
 * You can recalculate them with Utils.getnewGenFromHashingGen()
 * @type {{B: string, H: string}}
 */
module.exports.gens = {
    H : ec.keyFromPublic('0450929b74c1a04954b78b4b6035e97a5e078a5a0f28ec96d547bfee9ace803ac031d3c6863973926e049e637cb1b5f40a36dac28af1766968c30c2313f3a38904', 'hex').pub,
    B : ec.keyFromPublic('043de7e317f561e8c9481b2128508c7effd2d524528b7da29e14d040d86e4b0159afd6259519fb77ba2b3bcb83a464cac183c85a2431539ad9a2ab41d7e06beeb2', 'hex').pub
};

/**
 * Other constants used throughout the library
 *
 * @type {{FIXED_INC: bigint}}
 */
module.exports.essentials = {
    FIXED_INC : 142n
};